c
params
params=params.deep_symbolize_keys
params.deep_symbolize_keys!
params
params.has_key?(:type)
params.key?(:type)
n
p=params.deep_symbolize_keys
puts params
n
s
n
s
n
s
c
quit
c
puts params
params.symbolize_keys!
puts params
p=params.symbolize_keys
p=parmas.symbolize_keys
puts params
params.key?(:type)
n
s
n
s
n
s
c
n
c
n
c
n
c
n
s
n
s
n
s
c
p.longitude
p=test_result.location
test_result.location
n
params[:metadata][:location]
params[:metadata]
puts id
n
puts params
s
n
s
c
exit
c
n
s
c
test_result
c
n
params[:_id]
n
s
puts @location
n
ph[:metadata][:location][:coordinates]
ph[:metadata][:location]
puts ph
c
@photo.location.nil?
puts @photo.location
c
photo.location.is_a?(Point)
puts photo.location
puts photo
c
params.is_a?(Hash)
puts params[:metadata][:location]
puts params[:metadata]
puts params
params.has_key?"_id"
params.has_key?"metadata"
params.has_key?("metadata")
params.has_key?([:metadata])
params.is_a?(Hash)
params.key?([:_id])
params.key?([:metadata])
params.key?("metadata.location")
puts params[:metadata][:location]
puts params[:metadata]
puts params
c
puts params
c
puts params
c
puts params
c
puts params
c
n
c
n
puts params1
params1=params.symbolize_keys
params1.symbolize_keys
puts params
n
c
puts params
n
c
n
c
puts params[:geometry][:geolocation]
puts params[:geometry]
puts params
puts params["geometry.geolocation"]
n
puts params1
params1=params.symbolize_keys
params1=params.symbolize.keys
puts params
c
params.symbolize_keys!
puts params
c
params.symbolize_keys!
puts params
c
params.key?(:geolocation)
params.key?(:type)
puts params
params[:coordinates][0]
params[:lng]
n
puts params
step
puts params
c
p1.location
p1.geometry
p1[:geometry].nil?
p1.geometry.nil?
puts p1.geometry.to_hash
puts p1.geometry
puts p1[:geometry]
puts ref_point
c
puts @location.to_hash
puts @location
c
result.count
c
puts value.first
puts value
value.nil?
value.count
c
params[:address_components].nil?
params[:address_components].size;nil
params[:address_components].count;nil
puts params[:address_components];nil
c
params[:address_components].is_a?(Array)
puts params[:address_components];nil
pp params[:address_components]
puts params[:address_components]
c
result.count
c
result.count
result.each{|r| pp r}
c
result.each{|r| puts r}
result.each {|r| pp r}
result.methods?
result.empty?
result.nil?
puts result.to_a
puts result.t_a
c
result.explain
result.to_a
result.find.count
result.count
result.find
result.find.first
n
c
puts result.find().each {|p| puts p}
puts result.find().first
puts result.find.first
puts result.find
puts result.all
puts result.first
puts result
n
c
result.explain
result.view
result.is_a?(Mongo::Collection::View::Aggregation)
result.is_empty?
l 128
l128
l 125
l
result.nil?
result.each {|result| pp result}
result.to_a
result.t_a
pp result
puts result.first
puts result
pp result
result.count
result.nil?
n
c
result.count
l
n
c
result.sort({})
result.sort(nil)
result.sort({sort})
result.sort(sort)
puts sort
sort.nil?
c
sort.nil?
c
sort.nil?
!sort.nil?
puts offset
puts sort
pp sort
c
reload!
puts @formatted_address
puts @id
c
pp params.first
puts params.first
puts params
params.is_a?(Mongo::Collection::View)
c
params.is_a?(Mongo::Collection::View)
params.is_a?(BSON::Collection::View)
